[gd_scene load_steps=4 format=2]

[ext_resource path="res://CRT Shader/sample.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]

code = "shader_type canvas_item;

uniform float screen_width;
uniform float screen_height;

uniform float color_bleeding = 1.2;
uniform float bleeding_range_x = 3;
uniform float bleeding_range_y = 3;

uniform float lines_distance = 3.0;
uniform float scan_size = 1.0;
uniform float scanline_alpha = 0.9;
uniform float lines_velocity = -0.0;

vec4 get_color_scanline(vec2 uv, vec4 c, float time) {
    float line_row = floor((uv.y * screen_height/scan_size) + mod(time * lines_velocity, lines_distance));
    
    float n = 1.0 - ceil((mod(line_row, lines_distance)/lines_distance));
    
    c = c - n*c*(1.0 - scanline_alpha);
    c.a = 1.0;
    
    return c;
}

vec4 get_color_bleeding(sampler2D screen_texture, vec2 uv) {
    float pixel_size_x = 1.0/screen_width*bleeding_range_x;
    float pixel_size_y = 1.0/screen_height*bleeding_range_y;
    vec4 color_left = vec4(textureLod(screen_texture, uv - vec2(pixel_size_x, pixel_size_y), 0.0));
    vec4 current_color = vec4(textureLod(screen_texture, uv, 0.0));
    
    // Grab current color and certain amount (color_bleeding) from an adjacent pixel
    current_color = current_color*vec4(color_bleeding, 0.5, 1.0-color_bleeding, 1.0);
    color_left = color_left*vec4(1.0 - color_bleeding, 0.5, color_bleeding, 1.0);
    
    return current_color + color_left;
}

void fragment() {
    vec2 xy = SCREEN_UV;
    float time = TIME;
    
    vec4 c = get_color_bleeding(SCREEN_TEXTURE, xy);
    COLOR = get_color_scanline(xy, c, time);
}"

[sub_resource type="ShaderMaterial" id=2]

render_priority = 0
shader = SubResource( 1 )
shader_param/screen_width = 1024.0
shader_param/screen_height = 600.0
shader_param/color_bleeding = 1.0
shader_param/bleeding_range_x = 3.0
shader_param/bleeding_range_y = 0.0
shader_param/lines_distance = 4.0
shader_param/scan_size = 10.0
shader_param/scanline_alpha = 0.99
shader_param/lines_velocity = 3.001
_sections_unfolded = [ "shader_param" ]

[node name="CRT Effect" type="Control"]

anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 40.0
margin_bottom = 40.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
size_flags_horizontal = 1
size_flags_vertical = 1
_sections_unfolded = [ "Mouse" ]

[node name="sample" type="Sprite" parent="."]

visible = false
position = Vector2( 512.738, 303.298 )
texture = ExtResource( 1 )

[node name="CRT" type="ColorRect" parent="."]

material = SubResource( 2 )
anchor_left = 0.0
anchor_top = 0.0
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 2.0
margin_right = 1027.0
margin_bottom = 600.0
rect_pivot_offset = Vector2( 0, 0 )
rect_clip_content = false
mouse_filter = 1
size_flags_horizontal = 1
size_flags_vertical = 1
color = Color( 0.539062, 0.0484314, 0.0484314, 0 )
_sections_unfolded = [ "Material", "Mouse", "Pause" ]


